<script>
const iconList = {
  'Accepted': 'fa-check',
  'Wrong Answer': 'fa-times',
  'Runtime Error': 'fa-bomb',
  'Invalid Interaction': 'fa-ban',
  'Time Limit Exceeded': 'fa-clock',
  'Memory Limit Exceeded': 'fa-microchip',
  'Output Limit Exceeded': 'fa-print',
  'File Error': 'fa-file',
  'Waiting': 'fa-hourglass-half',
  'Running': 'fa-spinner',
  'Compiling': 'fa-spinner',
  'Judging': 'fa-spinner',
  'Compile Error': 'fa-code',
  'Submitted': 'fa-check', // NOI contests
  'System Error': 'fa-server',
  'No Testdata': 'fa-folder-open',
  'Partially Correct': 'fa-minus',
  'Judgement Failed': 'fa-server',
  'Skipped': 'fa-fast-forward',
  'Unknown': 'fa-question-circle'
};
Vue.component('status-label', {
  template: '#statusIconTemplate',
  props: ['status', 'indetail', 'progress'],
  computed: {
    icon() {
      var x = this.status.startsWith('Running') ? 'Running' : this.status;
      if (x in iconList) {
        return iconList[x];
      } else {
        return 'question-circle';
      }
    },
    colorClass() {
      var x = this.status.startsWith('Running') ? 'Running' : this.status;
      return (this.indetail ? 'status_detail ' : '') + x.toLowerCase().split(' ').join('_');
    },
    displayStatus() {
      return this.status.startsWith('Running') ? 'Running' : this.status;
    },
    getProgress() {
      if (this.status.startsWith('Running ')) {
        var tmp = this.status.split(' ')[1].trim().split('/');
        return { total: tmp[1], finished: tmp[0] };
      }
      return this.progress;
    }
  }
})
</script>
<script type="text/x-template" id="statusIconTemplate">
  <span class="status" :class="colorClass">
    <i class="fad fa-fw" :class="icon"></i>
    <template v-if="['Running', 'Waiting'].includes(displayStatus) && getProgress && getProgress.total">
      <span style="text-align: left; display: inline-block; width: 58px; ">{{ displayStatus }}</span>{{getProgress.finished }}/{{ getProgress.total }}
    </template>
    <template v-else>
      {{ displayStatus }}
    </template>
  </span>
</script>
